buildscript {
	dependencies {
		classpath 'org.postgresql:postgresql:42.2.8'
		classpath 'com.smartnews:jpa-entity-generator:0.99.8'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'net.ltgt.apt' version '0.20' // Using MapStruct
}

ext {
	mapstructVersion = "1.3.1.Final"
	springfoxVersion = "2.9.2"
	junitjupiterVersion = "5.5.2"
}

 apply plugin: 'entitygen' // JPA Generator
 apply plugin: 'net.ltgt.apt-idea'  // Using MapStruct

group = 'com.arakawa.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// JPA Generator
configurations { providedCompile }
sourceSets.main.compileClasspath += configurations.providedCompile
sourceSets.test.compileClasspath += configurations.providedCompile
sourceSets.test.runtimeClasspath += configurations.providedCompile

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Actuator / devtools
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring MVC / thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// SpringSecurity / oauth2
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	testImplementation 'org.springframework.security:spring-security-test'

	// Spring JPA
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring ElasticSearch
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	// Spring Cassandra
//	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'

	// Spring kafka
//	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.springframework.kafka:spring-kafka'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// JPA Generator
	providedCompile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'

	// SpringFox Swagger Library
	compile group: 'io.springfox', name: 'springfox-swagger2', version: "${springfoxVersion}"
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: "${springfoxVersion}"

	// Test Library
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitjupiterVersion}"
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitjupiterVersion}"

}

bootRun {
	jvmArgs = ['-Dspring.profiles.active=dev']
}

test {
	jvmArgs = ['-Dspring.profiles.active=dev']
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
}

entityGen {
	configPath = 'src/main/resources/entityGenConfig.yml'
}
